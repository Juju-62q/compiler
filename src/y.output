Nonterminals useless in grammar

   forward_test


Terminals unused in grammar

   FORWARD
   COLON


Rules useless in grammar

   84 forward_test: FORWARD PROCEDURE proc_name SEMICOLON


State 154 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON outblock PERIOD

    2 outblock: var_decl_part subprog_decl_part statement

    3 var_decl_part: %empty
    4              | var_decl_list SEMICOLON

    5 var_decl_list: var_decl_list SEMICOLON var_decl
    6              | var_decl

    7 var_decl: VAR id_list

    8 subprog_decl_part: subprog_decl_list SEMICOLON
    9                  | %empty

   10 subprog_decl_list: subprog_decl_list SEMICOLON subprog_decl
   11                  | subprog_decl

   12 subprog_decl: proc_decl
   13             | function_decl

   14 proc_decl: PROCEDURE proc_name SEMICOLON inblock
   15          | PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

   16 function_decl: FUNCTION proc_name SEMICOLON inblock
   17              | FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

   18 proc_variables: proc_var_list

   19 proc_var_list: IDENT
   20              | proc_var_list COMMA IDENT

   21 proc_name: IDENT

   22 inblock: var_decl_part statement

   23 statement_list: statement_list SEMICOLON statement
   24               | statement

   25 statement: assignment_statement
   26          | if_statement
   27          | while_statement
   28          | for_statement
   29          | proc_call_statement
   30          | null_statement
   31          | block_statement
   32          | read_statement
   33          | write_statement

   34 assignment_statement: IDENT ASSIGN expression
   35                     | array_assign ASSIGN expression

   36 array_assign: IDENT LBRACKET expression RBRACKET

   37 if_statement: IF condition THEN statement set_address_if else_statement set_address_else

   38 set_address_if: %empty

   39 else_statement: ELSE statement
   40               | %empty

   41 set_address_else: %empty

   42 while_statement: WHILE set_while_loop condition DO statement

   43 set_while_loop: %empty

   44 for_statement: for_initial for_loop statement

   45 for_initial: FOR IDENT ASSIGN expression

   46 for_loop: TO expression DO

   47 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list RPAREN
   48                    | proc_call_name

   49 add_stack_proc: %empty

   50 proc_call_name: IDENT

   51 block_statement: SBEGIN statement_list SEND

   52 read_statement: READ LPAREN IDENT RPAREN
   53               | READ LPAREN IDENT LBRACKET expression RBRACKET RPAREN

   54 write_statement: WRITE LPAREN expression RPAREN

   55 null_statement: %empty

   56 condition: expression EQ expression
   57          | expression NEQ expression
   58          | expression LT expression
   59          | expression LE expression
   60          | expression GT expression
   61          | expression GE expression

   62 expression: term
   63           | PLUS term
   64           | MINUS term
   65           | expression PLUS term
   66           | expression MINUS term

   67 term: factor
   68     | term MULT factor
   69     | term DIV factor

   70 factor: var_or_function
   71       | var_array
   72       | NUMBER
   73       | LPAREN expression RPAREN
   74       | proc_call_name add_stack_func LPAREN arg_list RPAREN

   75 add_stack_func: %empty

   76 var_or_function: IDENT

   77 var_array: IDENT LBRACKET expression RBRACKET

   78 arg_list: expression
   79         | arg_list COMMA expression

   80 id_list: IDENT
   81        | id_list COMMA IDENT
   82        | IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET
   83        | id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
SBEGIN (258) 51
DO (259) 42 46
ELSE (260) 39
SEND (261) 51
FOR (262) 45
FORWARD (263)
FUNCTION (264) 16 17
IF (265) 37
PROCEDURE (266) 14 15
PROGRAM (267) 1
READ (268) 52 53
THEN (269) 37
TO (270) 46
VAR (271) 7
WHILE (272) 42
WRITE (273) 54
PLUS (274) 63 65
MINUS (275) 64 66
MULT (276) 68
DIV (277) 69
EQ (278) 56
NEQ (279) 57
LE (280) 59
LT (281) 58
GE (282) 61
GT (283) 60
LPAREN (284) 15 17 47 52 53 54 73 74
RPAREN (285) 15 17 47 52 53 54 73 74
LBRACKET (286) 36 53 77 82 83
RBRACKET (287) 36 53 77 82 83
COMMA (288) 20 79 81 83
SEMICOLON (289) 1 4 5 8 10 14 15 16 17 23
COLON (290)
INTERVAL (291) 82 83
PERIOD (292) 1
ASSIGN (293) 34 35 45
NUMBER (294) 72 82 83
IDENT (295) 1 19 20 21 34 36 45 50 52 53 76 77 80 81 82 83


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
outblock (43)
    on left: 2, on right: 1
var_decl_part (44)
    on left: 3 4, on right: 2 22
var_decl_list (45)
    on left: 5 6, on right: 4 5
var_decl (46)
    on left: 7, on right: 5 6
subprog_decl_part (47)
    on left: 8 9, on right: 2
subprog_decl_list (48)
    on left: 10 11, on right: 8 10
subprog_decl (49)
    on left: 12 13, on right: 10 11
proc_decl (50)
    on left: 14 15, on right: 12
function_decl (51)
    on left: 16 17, on right: 13
proc_variables (52)
    on left: 18, on right: 15 17
proc_var_list (53)
    on left: 19 20, on right: 18 20
proc_name (54)
    on left: 21, on right: 14 15 16 17
inblock (55)
    on left: 22, on right: 14 15 16 17
statement_list (56)
    on left: 23 24, on right: 23 51
statement (57)
    on left: 25 26 27 28 29 30 31 32 33, on right: 2 22 23 24 37 39
    42 44
assignment_statement (58)
    on left: 34 35, on right: 25
array_assign (59)
    on left: 36, on right: 35
if_statement (60)
    on left: 37, on right: 26
set_address_if (61)
    on left: 38, on right: 37
else_statement (62)
    on left: 39 40, on right: 37
set_address_else (63)
    on left: 41, on right: 37
while_statement (64)
    on left: 42, on right: 27
set_while_loop (65)
    on left: 43, on right: 42
for_statement (66)
    on left: 44, on right: 28
for_initial (67)
    on left: 45, on right: 44
for_loop (68)
    on left: 46, on right: 44
proc_call_statement (69)
    on left: 47 48, on right: 29
add_stack_proc (70)
    on left: 49, on right: 47
proc_call_name (71)
    on left: 50, on right: 47 48 74
block_statement (72)
    on left: 51, on right: 31
read_statement (73)
    on left: 52 53, on right: 32
write_statement (74)
    on left: 54, on right: 33
null_statement (75)
    on left: 55, on right: 30
condition (76)
    on left: 56 57 58 59 60 61, on right: 37 42
expression (77)
    on left: 62 63 64 65 66, on right: 34 35 36 45 46 53 54 56 57 58
    59 60 61 65 66 73 77 78 79
term (78)
    on left: 67 68 69, on right: 62 63 64 65 66 68 69
factor (79)
    on left: 70 71 72 73 74, on right: 67 68 69
add_stack_func (80)
    on left: 75, on right: 74
var_or_function (81)
    on left: 76, on right: 70
var_array (82)
    on left: 77, on right: 71
arg_list (83)
    on left: 78 79, on right: 47 74 79
id_list (84)
    on left: 80 81 82 83, on right: 7 81 83


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT SEMICOLON . outblock PERIOD

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    outblock       go to state 7
    var_decl_part  go to state 8
    var_decl_list  go to state 9
    var_decl       go to state 10


State 6

    7 var_decl: VAR . id_list

    IDENT  shift, and go to state 11

    id_list  go to state 12


State 7

    1 program: PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD  shift, and go to state 13


State 8

    2 outblock: var_decl_part . subprog_decl_part statement

    FUNCTION   shift, and go to state 14
    PROCEDURE  shift, and go to state 15

    $default  reduce using rule 9 (subprog_decl_part)

    subprog_decl_part  go to state 16
    subprog_decl_list  go to state 17
    subprog_decl       go to state 18
    proc_decl          go to state 19
    function_decl      go to state 20


State 9

    4 var_decl_part: var_decl_list . SEMICOLON
    5 var_decl_list: var_decl_list . SEMICOLON var_decl

    SEMICOLON  shift, and go to state 21


State 10

    6 var_decl_list: var_decl .

    $default  reduce using rule 6 (var_decl_list)


State 11

   80 id_list: IDENT .
   82        | IDENT . LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 80 (id_list)


State 12

    7 var_decl: VAR id_list .
   81 id_list: id_list . COMMA IDENT
   83        | id_list . COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    COMMA  shift, and go to state 23

    $default  reduce using rule 7 (var_decl)


State 13

    1 program: PROGRAM IDENT SEMICOLON outblock PERIOD .

    $default  reduce using rule 1 (program)


State 14

   16 function_decl: FUNCTION . proc_name SEMICOLON inblock
   17              | FUNCTION . proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 24

    proc_name  go to state 25


State 15

   14 proc_decl: PROCEDURE . proc_name SEMICOLON inblock
   15          | PROCEDURE . proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 24

    proc_name  go to state 26


State 16

    2 outblock: var_decl_part subprog_decl_part . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 34
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 17

    8 subprog_decl_part: subprog_decl_list . SEMICOLON
   10 subprog_decl_list: subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON  shift, and go to state 47


State 18

   11 subprog_decl_list: subprog_decl .

    $default  reduce using rule 11 (subprog_decl_list)


State 19

   12 subprog_decl: proc_decl .

    $default  reduce using rule 12 (subprog_decl)


State 20

   13 subprog_decl: function_decl .

    $default  reduce using rule 13 (subprog_decl)


State 21

    4 var_decl_part: var_decl_list SEMICOLON .
    5 var_decl_list: var_decl_list SEMICOLON . var_decl

    VAR  shift, and go to state 6

    $default  reduce using rule 4 (var_decl_part)

    var_decl  go to state 48


State 22

   82 id_list: IDENT LBRACKET . NUMBER INTERVAL NUMBER RBRACKET

    NUMBER  shift, and go to state 49


State 23

   81 id_list: id_list COMMA . IDENT
   83        | id_list COMMA . IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    IDENT  shift, and go to state 50


State 24

   21 proc_name: IDENT .

    $default  reduce using rule 21 (proc_name)


State 25

   16 function_decl: FUNCTION proc_name . SEMICOLON inblock
   17              | FUNCTION proc_name . LPAREN proc_variables RPAREN SEMICOLON inblock

    LPAREN     shift, and go to state 51
    SEMICOLON  shift, and go to state 52


State 26

   14 proc_decl: PROCEDURE proc_name . SEMICOLON inblock
   15          | PROCEDURE proc_name . LPAREN proc_variables RPAREN SEMICOLON inblock

    LPAREN     shift, and go to state 53
    SEMICOLON  shift, and go to state 54


State 27

   51 block_statement: SBEGIN . statement_list SEND

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement_list        go to state 55
    statement             go to state 56
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 28

   45 for_initial: FOR . IDENT ASSIGN expression

    IDENT  shift, and go to state 57


State 29

   37 if_statement: IF . condition THEN statement set_address_if else_statement set_address_else

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    condition        go to state 64
    expression       go to state 65
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 30

   52 read_statement: READ . LPAREN IDENT RPAREN
   53               | READ . LPAREN IDENT LBRACKET expression RBRACKET RPAREN

    LPAREN  shift, and go to state 70


State 31

   42 while_statement: WHILE . set_while_loop condition DO statement

    $default  reduce using rule 43 (set_while_loop)

    set_while_loop  go to state 71


State 32

   54 write_statement: WRITE . LPAREN expression RPAREN

    LPAREN  shift, and go to state 72


State 33

   34 assignment_statement: IDENT . ASSIGN expression
   36 array_assign: IDENT . LBRACKET expression RBRACKET
   50 proc_call_name: IDENT .

    LBRACKET  shift, and go to state 73
    ASSIGN    shift, and go to state 74

    $default  reduce using rule 50 (proc_call_name)


State 34

    2 outblock: var_decl_part subprog_decl_part statement .

    $default  reduce using rule 2 (outblock)


State 35

   25 statement: assignment_statement .

    $default  reduce using rule 25 (statement)


State 36

   35 assignment_statement: array_assign . ASSIGN expression

    ASSIGN  shift, and go to state 75


State 37

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


State 38

   27 statement: while_statement .

    $default  reduce using rule 27 (statement)


State 39

   28 statement: for_statement .

    $default  reduce using rule 28 (statement)


State 40

   44 for_statement: for_initial . for_loop statement

    TO  shift, and go to state 76

    for_loop  go to state 77


State 41

   29 statement: proc_call_statement .

    $default  reduce using rule 29 (statement)


State 42

   47 proc_call_statement: proc_call_name . add_stack_proc LPAREN arg_list RPAREN
   48                    | proc_call_name .

    LPAREN    reduce using rule 49 (add_stack_proc)
    $default  reduce using rule 48 (proc_call_statement)

    add_stack_proc  go to state 78


State 43

   31 statement: block_statement .

    $default  reduce using rule 31 (statement)


State 44

   32 statement: read_statement .

    $default  reduce using rule 32 (statement)


State 45

   33 statement: write_statement .

    $default  reduce using rule 33 (statement)


State 46

   30 statement: null_statement .

    $default  reduce using rule 30 (statement)


State 47

    8 subprog_decl_part: subprog_decl_list SEMICOLON .
   10 subprog_decl_list: subprog_decl_list SEMICOLON . subprog_decl

    FUNCTION   shift, and go to state 14
    PROCEDURE  shift, and go to state 15

    $default  reduce using rule 8 (subprog_decl_part)

    subprog_decl   go to state 79
    proc_decl      go to state 19
    function_decl  go to state 20


State 48

    5 var_decl_list: var_decl_list SEMICOLON var_decl .

    $default  reduce using rule 5 (var_decl_list)


State 49

   82 id_list: IDENT LBRACKET NUMBER . INTERVAL NUMBER RBRACKET

    INTERVAL  shift, and go to state 80


State 50

   81 id_list: id_list COMMA IDENT .
   83        | id_list COMMA IDENT . LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    LBRACKET  shift, and go to state 81

    $default  reduce using rule 81 (id_list)


State 51

   17 function_decl: FUNCTION proc_name LPAREN . proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 82

    proc_variables  go to state 83
    proc_var_list   go to state 84


State 52

   16 function_decl: FUNCTION proc_name SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 85
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 86


State 53

   15 proc_decl: PROCEDURE proc_name LPAREN . proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 82

    proc_variables  go to state 87
    proc_var_list   go to state 84


State 54

   14 proc_decl: PROCEDURE proc_name SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 85
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 88


State 55

   23 statement_list: statement_list . SEMICOLON statement
   51 block_statement: SBEGIN statement_list . SEND

    SEND       shift, and go to state 89
    SEMICOLON  shift, and go to state 90


State 56

   24 statement_list: statement .

    $default  reduce using rule 24 (statement_list)


State 57

   45 for_initial: FOR IDENT . ASSIGN expression

    ASSIGN  shift, and go to state 91


State 58

   63 expression: PLUS . term

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    term             go to state 92
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 59

   64 expression: MINUS . term

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    term             go to state 93
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 60

   73 factor: LPAREN . expression RPAREN

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 94
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 61

   72 factor: NUMBER .

    $default  reduce using rule 72 (factor)


State 62

   50 proc_call_name: IDENT .
   76 var_or_function: IDENT .
   77 var_array: IDENT . LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 95

    LPAREN    reduce using rule 50 (proc_call_name)
    $default  reduce using rule 76 (var_or_function)


State 63

   74 factor: proc_call_name . add_stack_func LPAREN arg_list RPAREN

    $default  reduce using rule 75 (add_stack_func)

    add_stack_func  go to state 96


State 64

   37 if_statement: IF condition . THEN statement set_address_if else_statement set_address_else

    THEN  shift, and go to state 97


State 65

   56 condition: expression . EQ expression
   57          | expression . NEQ expression
   58          | expression . LT expression
   59          | expression . LE expression
   60          | expression . GT expression
   61          | expression . GE expression
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    EQ     shift, and go to state 100
    NEQ    shift, and go to state 101
    LE     shift, and go to state 102
    LT     shift, and go to state 103
    GE     shift, and go to state 104
    GT     shift, and go to state 105


State 66

   62 expression: term .
   68 term: term . MULT factor
   69     | term . DIV factor

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107

    $default  reduce using rule 62 (expression)


State 67

   67 term: factor .

    $default  reduce using rule 67 (term)


State 68

   70 factor: var_or_function .

    $default  reduce using rule 70 (factor)


State 69

   71 factor: var_array .

    $default  reduce using rule 71 (factor)


State 70

   52 read_statement: READ LPAREN . IDENT RPAREN
   53               | READ LPAREN . IDENT LBRACKET expression RBRACKET RPAREN

    IDENT  shift, and go to state 108


State 71

   42 while_statement: WHILE set_while_loop . condition DO statement

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    condition        go to state 109
    expression       go to state 65
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 72

   54 write_statement: WRITE LPAREN . expression RPAREN

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 110
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 73

   36 array_assign: IDENT LBRACKET . expression RBRACKET

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 111
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 74

   34 assignment_statement: IDENT ASSIGN . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 112
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 75

   35 assignment_statement: array_assign ASSIGN . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 113
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 76

   46 for_loop: TO . expression DO

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 114
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 77

   44 for_statement: for_initial for_loop . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 115
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 78

   47 proc_call_statement: proc_call_name add_stack_proc . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 116


State 79

   10 subprog_decl_list: subprog_decl_list SEMICOLON subprog_decl .

    $default  reduce using rule 10 (subprog_decl_list)


State 80

   82 id_list: IDENT LBRACKET NUMBER INTERVAL . NUMBER RBRACKET

    NUMBER  shift, and go to state 117


State 81

   83 id_list: id_list COMMA IDENT LBRACKET . NUMBER INTERVAL NUMBER RBRACKET

    NUMBER  shift, and go to state 118


State 82

   19 proc_var_list: IDENT .

    $default  reduce using rule 19 (proc_var_list)


State 83

   17 function_decl: FUNCTION proc_name LPAREN proc_variables . RPAREN SEMICOLON inblock

    RPAREN  shift, and go to state 119


State 84

   18 proc_variables: proc_var_list .
   20 proc_var_list: proc_var_list . COMMA IDENT

    COMMA  shift, and go to state 120

    $default  reduce using rule 18 (proc_variables)


State 85

   22 inblock: var_decl_part . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 121
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 86

   16 function_decl: FUNCTION proc_name SEMICOLON inblock .

    $default  reduce using rule 16 (function_decl)


State 87

   15 proc_decl: PROCEDURE proc_name LPAREN proc_variables . RPAREN SEMICOLON inblock

    RPAREN  shift, and go to state 122


State 88

   14 proc_decl: PROCEDURE proc_name SEMICOLON inblock .

    $default  reduce using rule 14 (proc_decl)


State 89

   51 block_statement: SBEGIN statement_list SEND .

    $default  reduce using rule 51 (block_statement)


State 90

   23 statement_list: statement_list SEMICOLON . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 123
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 91

   45 for_initial: FOR IDENT ASSIGN . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 124
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 92

   63 expression: PLUS term .
   68 term: term . MULT factor
   69     | term . DIV factor

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107

    $default  reduce using rule 63 (expression)


State 93

   64 expression: MINUS term .
   68 term: term . MULT factor
   69     | term . DIV factor

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107

    $default  reduce using rule 64 (expression)


State 94

   65 expression: expression . PLUS term
   66           | expression . MINUS term
   73 factor: LPAREN expression . RPAREN

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    RPAREN  shift, and go to state 125


State 95

   77 var_array: IDENT LBRACKET . expression RBRACKET

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 126
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 96

   74 factor: proc_call_name add_stack_func . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 127


State 97

   37 if_statement: IF condition THEN . statement set_address_if else_statement set_address_else

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 128
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 98

   65 expression: expression PLUS . term

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    term             go to state 129
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 99

   66 expression: expression MINUS . term

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    term             go to state 130
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 100

   56 condition: expression EQ . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 131
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 101

   57 condition: expression NEQ . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 132
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 102

   59 condition: expression LE . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 133
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 103

   58 condition: expression LT . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 134
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 104

   61 condition: expression GE . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 135
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 105

   60 condition: expression GT . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 136
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 106

   68 term: term MULT . factor

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    factor           go to state 137
    var_or_function  go to state 68
    var_array        go to state 69


State 107

   69 term: term DIV . factor

    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    factor           go to state 138
    var_or_function  go to state 68
    var_array        go to state 69


State 108

   52 read_statement: READ LPAREN IDENT . RPAREN
   53               | READ LPAREN IDENT . LBRACKET expression RBRACKET RPAREN

    RPAREN    shift, and go to state 139
    LBRACKET  shift, and go to state 140


State 109

   42 while_statement: WHILE set_while_loop condition . DO statement

    DO  shift, and go to state 141


State 110

   54 write_statement: WRITE LPAREN expression . RPAREN
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    RPAREN  shift, and go to state 142


State 111

   36 array_assign: IDENT LBRACKET expression . RBRACKET
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS      shift, and go to state 98
    MINUS     shift, and go to state 99
    RBRACKET  shift, and go to state 143


State 112

   34 assignment_statement: IDENT ASSIGN expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 34 (assignment_statement)


State 113

   35 assignment_statement: array_assign ASSIGN expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 35 (assignment_statement)


State 114

   46 for_loop: TO expression . DO
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    DO     shift, and go to state 144
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99


State 115

   44 for_statement: for_initial for_loop statement .

    $default  reduce using rule 44 (for_statement)


State 116

   47 proc_call_statement: proc_call_name add_stack_proc LPAREN . arg_list RPAREN

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 145
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69
    arg_list         go to state 146


State 117

   82 id_list: IDENT LBRACKET NUMBER INTERVAL NUMBER . RBRACKET

    RBRACKET  shift, and go to state 147


State 118

   83 id_list: id_list COMMA IDENT LBRACKET NUMBER . INTERVAL NUMBER RBRACKET

    INTERVAL  shift, and go to state 148


State 119

   17 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN . SEMICOLON inblock

    SEMICOLON  shift, and go to state 149


State 120

   20 proc_var_list: proc_var_list COMMA . IDENT

    IDENT  shift, and go to state 150


State 121

   22 inblock: var_decl_part statement .

    $default  reduce using rule 22 (inblock)


State 122

   15 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN . SEMICOLON inblock

    SEMICOLON  shift, and go to state 151


State 123

   23 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 23 (statement_list)


State 124

   45 for_initial: FOR IDENT ASSIGN expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 45 (for_initial)


State 125

   73 factor: LPAREN expression RPAREN .

    $default  reduce using rule 73 (factor)


State 126

   65 expression: expression . PLUS term
   66           | expression . MINUS term
   77 var_array: IDENT LBRACKET expression . RBRACKET

    PLUS      shift, and go to state 98
    MINUS     shift, and go to state 99
    RBRACKET  shift, and go to state 152


State 127

   74 factor: proc_call_name add_stack_func LPAREN . arg_list RPAREN

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 145
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69
    arg_list         go to state 153


State 128

   37 if_statement: IF condition THEN statement . set_address_if else_statement set_address_else

    $default  reduce using rule 38 (set_address_if)

    set_address_if  go to state 154


State 129

   65 expression: expression PLUS term .
   68 term: term . MULT factor
   69     | term . DIV factor

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107

    $default  reduce using rule 65 (expression)


State 130

   66 expression: expression MINUS term .
   68 term: term . MULT factor
   69     | term . DIV factor

    MULT  shift, and go to state 106
    DIV   shift, and go to state 107

    $default  reduce using rule 66 (expression)


State 131

   56 condition: expression EQ expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 56 (condition)


State 132

   57 condition: expression NEQ expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 57 (condition)


State 133

   59 condition: expression LE expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 59 (condition)


State 134

   58 condition: expression LT expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 58 (condition)


State 135

   61 condition: expression GE expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 61 (condition)


State 136

   60 condition: expression GT expression .
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 60 (condition)


State 137

   68 term: term MULT factor .

    $default  reduce using rule 68 (term)


State 138

   69 term: term DIV factor .

    $default  reduce using rule 69 (term)


State 139

   52 read_statement: READ LPAREN IDENT RPAREN .

    $default  reduce using rule 52 (read_statement)


State 140

   53 read_statement: READ LPAREN IDENT LBRACKET . expression RBRACKET RPAREN

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 155
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 141

   42 while_statement: WHILE set_while_loop condition DO . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 156
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 142

   54 write_statement: WRITE LPAREN expression RPAREN .

    $default  reduce using rule 54 (write_statement)


State 143

   36 array_assign: IDENT LBRACKET expression RBRACKET .

    $default  reduce using rule 36 (array_assign)


State 144

   46 for_loop: TO expression DO .

    $default  reduce using rule 46 (for_loop)


State 145

   65 expression: expression . PLUS term
   66           | expression . MINUS term
   78 arg_list: expression .

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 78 (arg_list)


State 146

   47 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list . RPAREN
   79 arg_list: arg_list . COMMA expression

    RPAREN  shift, and go to state 157
    COMMA   shift, and go to state 158


State 147

   82 id_list: IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET .

    $default  reduce using rule 82 (id_list)


State 148

   83 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL . NUMBER RBRACKET

    NUMBER  shift, and go to state 159


State 149

   17 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 85
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 160


State 150

   20 proc_var_list: proc_var_list COMMA IDENT .

    $default  reduce using rule 20 (proc_var_list)


State 151

   15 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 85
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 161


State 152

   77 var_array: IDENT LBRACKET expression RBRACKET .

    $default  reduce using rule 77 (var_array)


State 153

   74 factor: proc_call_name add_stack_func LPAREN arg_list . RPAREN
   79 arg_list: arg_list . COMMA expression

    RPAREN  shift, and go to state 162
    COMMA   shift, and go to state 158


State 154

   37 if_statement: IF condition THEN statement set_address_if . else_statement set_address_else

    ELSE  shift, and go to state 163

    ELSE      [reduce using rule 40 (else_statement)]
    $default  reduce using rule 40 (else_statement)

    else_statement  go to state 164


State 155

   53 read_statement: READ LPAREN IDENT LBRACKET expression . RBRACKET RPAREN
   65 expression: expression . PLUS term
   66           | expression . MINUS term

    PLUS      shift, and go to state 98
    MINUS     shift, and go to state 99
    RBRACKET  shift, and go to state 165


State 156

   42 while_statement: WHILE set_while_loop condition DO statement .

    $default  reduce using rule 42 (while_statement)


State 157

   47 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list RPAREN .

    $default  reduce using rule 47 (proc_call_statement)


State 158

   79 arg_list: arg_list COMMA . expression

    PLUS    shift, and go to state 58
    MINUS   shift, and go to state 59
    LPAREN  shift, and go to state 60
    NUMBER  shift, and go to state 61
    IDENT   shift, and go to state 62

    proc_call_name   go to state 63
    expression       go to state 166
    term             go to state 66
    factor           go to state 67
    var_or_function  go to state 68
    var_array        go to state 69


State 159

   83 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER . RBRACKET

    RBRACKET  shift, and go to state 167


State 160

   17 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON inblock .

    $default  reduce using rule 17 (function_decl)


State 161

   15 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON inblock .

    $default  reduce using rule 15 (proc_decl)


State 162

   74 factor: proc_call_name add_stack_func LPAREN arg_list RPAREN .

    $default  reduce using rule 74 (factor)


State 163

   39 else_statement: ELSE . statement

    SBEGIN  shift, and go to state 27
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    READ    shift, and go to state 30
    WHILE   shift, and go to state 31
    WRITE   shift, and go to state 32
    IDENT   shift, and go to state 33

    $default  reduce using rule 55 (null_statement)

    statement             go to state 168
    assignment_statement  go to state 35
    array_assign          go to state 36
    if_statement          go to state 37
    while_statement       go to state 38
    for_statement         go to state 39
    for_initial           go to state 40
    proc_call_statement   go to state 41
    proc_call_name        go to state 42
    block_statement       go to state 43
    read_statement        go to state 44
    write_statement       go to state 45
    null_statement        go to state 46


State 164

   37 if_statement: IF condition THEN statement set_address_if else_statement . set_address_else

    $default  reduce using rule 41 (set_address_else)

    set_address_else  go to state 169


State 165

   53 read_statement: READ LPAREN IDENT LBRACKET expression RBRACKET . RPAREN

    RPAREN  shift, and go to state 170


State 166

   65 expression: expression . PLUS term
   66           | expression . MINUS term
   79 arg_list: arg_list COMMA expression .

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 79 (arg_list)


State 167

   83 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET .

    $default  reduce using rule 83 (id_list)


State 168

   39 else_statement: ELSE statement .

    $default  reduce using rule 39 (else_statement)


State 169

   37 if_statement: IF condition THEN statement set_address_if else_statement set_address_else .

    $default  reduce using rule 37 (if_statement)


State 170

   53 read_statement: READ LPAREN IDENT LBRACKET expression RBRACKET RPAREN .

    $default  reduce using rule 53 (read_statement)
