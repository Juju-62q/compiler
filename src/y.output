Terminals unused in grammar

   COLON


State 8 conflicts: 3 shift/reduce
State 50 conflicts: 3 shift/reduce
State 166 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON outblock PERIOD

    2 outblock: var_decl_part subprog_decl_part statement subprog_decl_part

    3 var_decl_part: %empty
    4              | var_decl_list SEMICOLON

    5 var_decl_list: var_decl_list SEMICOLON var_decl
    6              | var_decl

    7 var_decl: VAR id_list

    8 subprog_decl_part: subprog_decl_list SEMICOLON
    9                  | %empty

   10 subprog_decl_list: subprog_decl_list SEMICOLON subprog_decl
   11                  | subprog_decl

   12 subprog_decl: proc_decl
   13             | function_decl
   14             | forwarding_decl

   15 forwarding_decl: forwarding PROCEDURE proc_name
   16                | forwarding PROCEDURE proc_name LPAREN proc_variables RPAREN
   17                | forwarding FUNCTION proc_name
   18                | forwarding FUNCTION proc_name LPAREN proc_variables RPAREN

   19 forwarding: FORWARD

   20 proc_decl: PROCEDURE proc_name SEMICOLON inblock
   21          | PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

   22 function_decl: FUNCTION proc_name SEMICOLON inblock
   23              | FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

   24 proc_variables: proc_var_list

   25 proc_var_list: IDENT
   26              | proc_var_list COMMA IDENT

   27 proc_name: IDENT

   28 inblock: var_decl_part statement

   29 statement_list: statement_list SEMICOLON statement
   30               | statement

   31 statement: assignment_statement
   32          | if_statement
   33          | while_statement
   34          | for_statement
   35          | proc_call_statement
   36          | null_statement
   37          | block_statement
   38          | read_statement
   39          | write_statement

   40 assignment_statement: IDENT ASSIGN expression
   41                     | array_assign ASSIGN expression

   42 array_assign: IDENT LBRACKET expression RBRACKET

   43 if_statement: IF condition THEN statement set_address_if else_statement set_address_else

   44 set_address_if: %empty

   45 else_statement: ELSE statement
   46               | %empty

   47 set_address_else: %empty

   48 while_statement: WHILE set_while_loop condition DO statement

   49 set_while_loop: %empty

   50 for_statement: for_initial for_loop statement

   51 for_initial: FOR IDENT ASSIGN expression

   52 for_loop: TO expression DO

   53 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list RPAREN
   54                    | proc_call_name

   55 add_stack_proc: %empty

   56 proc_call_name: IDENT

   57 block_statement: SBEGIN statement_list SEND

   58 read_statement: READ LPAREN IDENT RPAREN
   59               | READ LPAREN IDENT LBRACKET expression RBRACKET RPAREN

   60 write_statement: WRITE LPAREN expression RPAREN

   61 null_statement: %empty

   62 condition: expression EQ expression
   63          | expression NEQ expression
   64          | expression LT expression
   65          | expression LE expression
   66          | expression GT expression
   67          | expression GE expression

   68 expression: term
   69           | PLUS term
   70           | MINUS term
   71           | expression PLUS term
   72           | expression MINUS term

   73 term: factor
   74     | term MULT factor
   75     | term DIV factor

   76 factor: var_or_function
   77       | var_array
   78       | NUMBER
   79       | LPAREN expression RPAREN
   80       | proc_call_name add_stack_func LPAREN arg_list RPAREN

   81 add_stack_func: %empty

   82 var_or_function: IDENT

   83 var_array: IDENT LBRACKET expression RBRACKET

   84 arg_list: expression
   85         | arg_list COMMA expression

   86 id_list: IDENT
   87        | id_list COMMA IDENT
   88        | IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET
   89        | id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
SBEGIN (258) 57
DO (259) 48 52
ELSE (260) 45
SEND (261) 57
FOR (262) 51
FORWARD (263) 19
FUNCTION (264) 17 18 22 23
IF (265) 43
PROCEDURE (266) 15 16 20 21
PROGRAM (267) 1
READ (268) 58 59
THEN (269) 43
TO (270) 52
VAR (271) 7
WHILE (272) 48
WRITE (273) 60
PLUS (274) 69 71
MINUS (275) 70 72
MULT (276) 74
DIV (277) 75
EQ (278) 62
NEQ (279) 63
LE (280) 65
LT (281) 64
GE (282) 67
GT (283) 66
LPAREN (284) 16 18 21 23 53 58 59 60 79 80
RPAREN (285) 16 18 21 23 53 58 59 60 79 80
LBRACKET (286) 42 59 83 88 89
RBRACKET (287) 42 59 83 88 89
COMMA (288) 26 85 87 89
SEMICOLON (289) 1 4 5 8 10 20 21 22 23 29
COLON (290)
INTERVAL (291) 88 89
PERIOD (292) 1
ASSIGN (293) 40 41 51
NUMBER (294) 78 88 89
IDENT (295) 1 25 26 27 40 42 51 56 58 59 82 83 86 87 88 89


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
outblock (43)
    on left: 2, on right: 1
var_decl_part (44)
    on left: 3 4, on right: 2 28
var_decl_list (45)
    on left: 5 6, on right: 4 5
var_decl (46)
    on left: 7, on right: 5 6
subprog_decl_part (47)
    on left: 8 9, on right: 2
subprog_decl_list (48)
    on left: 10 11, on right: 8 10
subprog_decl (49)
    on left: 12 13 14, on right: 10 11
forwarding_decl (50)
    on left: 15 16 17 18, on right: 14
forwarding (51)
    on left: 19, on right: 15 16 17 18
proc_decl (52)
    on left: 20 21, on right: 12
function_decl (53)
    on left: 22 23, on right: 13
proc_variables (54)
    on left: 24, on right: 16 18 21 23
proc_var_list (55)
    on left: 25 26, on right: 24 26
proc_name (56)
    on left: 27, on right: 15 16 17 18 20 21 22 23
inblock (57)
    on left: 28, on right: 20 21 22 23
statement_list (58)
    on left: 29 30, on right: 29 57
statement (59)
    on left: 31 32 33 34 35 36 37 38 39, on right: 2 28 29 30 43 45
    48 50
assignment_statement (60)
    on left: 40 41, on right: 31
array_assign (61)
    on left: 42, on right: 41
if_statement (62)
    on left: 43, on right: 32
set_address_if (63)
    on left: 44, on right: 43
else_statement (64)
    on left: 45 46, on right: 43
set_address_else (65)
    on left: 47, on right: 43
while_statement (66)
    on left: 48, on right: 33
set_while_loop (67)
    on left: 49, on right: 48
for_statement (68)
    on left: 50, on right: 34
for_initial (69)
    on left: 51, on right: 50
for_loop (70)
    on left: 52, on right: 50
proc_call_statement (71)
    on left: 53 54, on right: 35
add_stack_proc (72)
    on left: 55, on right: 53
proc_call_name (73)
    on left: 56, on right: 53 54 80
block_statement (74)
    on left: 57, on right: 37
read_statement (75)
    on left: 58 59, on right: 38
write_statement (76)
    on left: 60, on right: 39
null_statement (77)
    on left: 61, on right: 36
condition (78)
    on left: 62 63 64 65 66 67, on right: 43 48
expression (79)
    on left: 68 69 70 71 72, on right: 40 41 42 51 52 59 60 62 63 64
    65 66 67 71 72 79 83 84 85
term (80)
    on left: 73 74 75, on right: 68 69 70 71 72 74 75
factor (81)
    on left: 76 77 78 79 80, on right: 73 74 75
add_stack_func (82)
    on left: 81, on right: 80
var_or_function (83)
    on left: 82, on right: 76
var_array (84)
    on left: 83, on right: 77
arg_list (85)
    on left: 84 85, on right: 53 80 85
id_list (86)
    on left: 86 87 88 89, on right: 7 87 89


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT SEMICOLON . outblock PERIOD

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    outblock       go to state 7
    var_decl_part  go to state 8
    var_decl_list  go to state 9
    var_decl       go to state 10


State 6

    7 var_decl: VAR . id_list

    IDENT  shift, and go to state 11

    id_list  go to state 12


State 7

    1 program: PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD  shift, and go to state 13


State 8

    2 outblock: var_decl_part . subprog_decl_part statement subprog_decl_part

    FORWARD    shift, and go to state 14
    FUNCTION   shift, and go to state 15
    PROCEDURE  shift, and go to state 16

    FORWARD    [reduce using rule 9 (subprog_decl_part)]
    FUNCTION   [reduce using rule 9 (subprog_decl_part)]
    PROCEDURE  [reduce using rule 9 (subprog_decl_part)]
    $default   reduce using rule 9 (subprog_decl_part)

    subprog_decl_part  go to state 17
    subprog_decl_list  go to state 18
    subprog_decl       go to state 19
    forwarding_decl    go to state 20
    forwarding         go to state 21
    proc_decl          go to state 22
    function_decl      go to state 23


State 9

    4 var_decl_part: var_decl_list . SEMICOLON
    5 var_decl_list: var_decl_list . SEMICOLON var_decl

    SEMICOLON  shift, and go to state 24


State 10

    6 var_decl_list: var_decl .

    $default  reduce using rule 6 (var_decl_list)


State 11

   86 id_list: IDENT .
   88        | IDENT . LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    LBRACKET  shift, and go to state 25

    $default  reduce using rule 86 (id_list)


State 12

    7 var_decl: VAR id_list .
   87 id_list: id_list . COMMA IDENT
   89        | id_list . COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    COMMA  shift, and go to state 26

    $default  reduce using rule 7 (var_decl)


State 13

    1 program: PROGRAM IDENT SEMICOLON outblock PERIOD .

    $default  reduce using rule 1 (program)


State 14

   19 forwarding: FORWARD .

    $default  reduce using rule 19 (forwarding)


State 15

   22 function_decl: FUNCTION . proc_name SEMICOLON inblock
   23              | FUNCTION . proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 27

    proc_name  go to state 28


State 16

   20 proc_decl: PROCEDURE . proc_name SEMICOLON inblock
   21          | PROCEDURE . proc_name LPAREN proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 27

    proc_name  go to state 29


State 17

    2 outblock: var_decl_part subprog_decl_part . statement subprog_decl_part

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 37
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 18

    8 subprog_decl_part: subprog_decl_list . SEMICOLON
   10 subprog_decl_list: subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON  shift, and go to state 50


State 19

   11 subprog_decl_list: subprog_decl .

    $default  reduce using rule 11 (subprog_decl_list)


State 20

   14 subprog_decl: forwarding_decl .

    $default  reduce using rule 14 (subprog_decl)


State 21

   15 forwarding_decl: forwarding . PROCEDURE proc_name
   16                | forwarding . PROCEDURE proc_name LPAREN proc_variables RPAREN
   17                | forwarding . FUNCTION proc_name
   18                | forwarding . FUNCTION proc_name LPAREN proc_variables RPAREN

    FUNCTION   shift, and go to state 51
    PROCEDURE  shift, and go to state 52


State 22

   12 subprog_decl: proc_decl .

    $default  reduce using rule 12 (subprog_decl)


State 23

   13 subprog_decl: function_decl .

    $default  reduce using rule 13 (subprog_decl)


State 24

    4 var_decl_part: var_decl_list SEMICOLON .
    5 var_decl_list: var_decl_list SEMICOLON . var_decl

    VAR  shift, and go to state 6

    $default  reduce using rule 4 (var_decl_part)

    var_decl  go to state 53


State 25

   88 id_list: IDENT LBRACKET . NUMBER INTERVAL NUMBER RBRACKET

    NUMBER  shift, and go to state 54


State 26

   87 id_list: id_list COMMA . IDENT
   89        | id_list COMMA . IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    IDENT  shift, and go to state 55


State 27

   27 proc_name: IDENT .

    $default  reduce using rule 27 (proc_name)


State 28

   22 function_decl: FUNCTION proc_name . SEMICOLON inblock
   23              | FUNCTION proc_name . LPAREN proc_variables RPAREN SEMICOLON inblock

    LPAREN     shift, and go to state 56
    SEMICOLON  shift, and go to state 57


State 29

   20 proc_decl: PROCEDURE proc_name . SEMICOLON inblock
   21          | PROCEDURE proc_name . LPAREN proc_variables RPAREN SEMICOLON inblock

    LPAREN     shift, and go to state 58
    SEMICOLON  shift, and go to state 59


State 30

   57 block_statement: SBEGIN . statement_list SEND

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement_list        go to state 60
    statement             go to state 61
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 31

   51 for_initial: FOR . IDENT ASSIGN expression

    IDENT  shift, and go to state 62


State 32

   43 if_statement: IF . condition THEN statement set_address_if else_statement set_address_else

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    condition        go to state 69
    expression       go to state 70
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 33

   58 read_statement: READ . LPAREN IDENT RPAREN
   59               | READ . LPAREN IDENT LBRACKET expression RBRACKET RPAREN

    LPAREN  shift, and go to state 75


State 34

   48 while_statement: WHILE . set_while_loop condition DO statement

    $default  reduce using rule 49 (set_while_loop)

    set_while_loop  go to state 76


State 35

   60 write_statement: WRITE . LPAREN expression RPAREN

    LPAREN  shift, and go to state 77


State 36

   40 assignment_statement: IDENT . ASSIGN expression
   42 array_assign: IDENT . LBRACKET expression RBRACKET
   56 proc_call_name: IDENT .

    LBRACKET  shift, and go to state 78
    ASSIGN    shift, and go to state 79

    $default  reduce using rule 56 (proc_call_name)


State 37

    2 outblock: var_decl_part subprog_decl_part statement . subprog_decl_part

    FORWARD    shift, and go to state 14
    FUNCTION   shift, and go to state 15
    PROCEDURE  shift, and go to state 16

    $default  reduce using rule 9 (subprog_decl_part)

    subprog_decl_part  go to state 80
    subprog_decl_list  go to state 18
    subprog_decl       go to state 19
    forwarding_decl    go to state 20
    forwarding         go to state 21
    proc_decl          go to state 22
    function_decl      go to state 23


State 38

   31 statement: assignment_statement .

    $default  reduce using rule 31 (statement)


State 39

   41 assignment_statement: array_assign . ASSIGN expression

    ASSIGN  shift, and go to state 81


State 40

   32 statement: if_statement .

    $default  reduce using rule 32 (statement)


State 41

   33 statement: while_statement .

    $default  reduce using rule 33 (statement)


State 42

   34 statement: for_statement .

    $default  reduce using rule 34 (statement)


State 43

   50 for_statement: for_initial . for_loop statement

    TO  shift, and go to state 82

    for_loop  go to state 83


State 44

   35 statement: proc_call_statement .

    $default  reduce using rule 35 (statement)


State 45

   53 proc_call_statement: proc_call_name . add_stack_proc LPAREN arg_list RPAREN
   54                    | proc_call_name .

    LPAREN    reduce using rule 55 (add_stack_proc)
    $default  reduce using rule 54 (proc_call_statement)

    add_stack_proc  go to state 84


State 46

   37 statement: block_statement .

    $default  reduce using rule 37 (statement)


State 47

   38 statement: read_statement .

    $default  reduce using rule 38 (statement)


State 48

   39 statement: write_statement .

    $default  reduce using rule 39 (statement)


State 49

   36 statement: null_statement .

    $default  reduce using rule 36 (statement)


State 50

    8 subprog_decl_part: subprog_decl_list SEMICOLON .
   10 subprog_decl_list: subprog_decl_list SEMICOLON . subprog_decl

    FORWARD    shift, and go to state 14
    FUNCTION   shift, and go to state 15
    PROCEDURE  shift, and go to state 16

    FORWARD    [reduce using rule 8 (subprog_decl_part)]
    FUNCTION   [reduce using rule 8 (subprog_decl_part)]
    PROCEDURE  [reduce using rule 8 (subprog_decl_part)]
    $default   reduce using rule 8 (subprog_decl_part)

    subprog_decl     go to state 85
    forwarding_decl  go to state 20
    forwarding       go to state 21
    proc_decl        go to state 22
    function_decl    go to state 23


State 51

   17 forwarding_decl: forwarding FUNCTION . proc_name
   18                | forwarding FUNCTION . proc_name LPAREN proc_variables RPAREN

    IDENT  shift, and go to state 27

    proc_name  go to state 86


State 52

   15 forwarding_decl: forwarding PROCEDURE . proc_name
   16                | forwarding PROCEDURE . proc_name LPAREN proc_variables RPAREN

    IDENT  shift, and go to state 27

    proc_name  go to state 87


State 53

    5 var_decl_list: var_decl_list SEMICOLON var_decl .

    $default  reduce using rule 5 (var_decl_list)


State 54

   88 id_list: IDENT LBRACKET NUMBER . INTERVAL NUMBER RBRACKET

    INTERVAL  shift, and go to state 88


State 55

   87 id_list: id_list COMMA IDENT .
   89        | id_list COMMA IDENT . LBRACKET NUMBER INTERVAL NUMBER RBRACKET

    LBRACKET  shift, and go to state 89

    $default  reduce using rule 87 (id_list)


State 56

   23 function_decl: FUNCTION proc_name LPAREN . proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 90

    proc_variables  go to state 91
    proc_var_list   go to state 92


State 57

   22 function_decl: FUNCTION proc_name SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 93
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 94


State 58

   21 proc_decl: PROCEDURE proc_name LPAREN . proc_variables RPAREN SEMICOLON inblock

    IDENT  shift, and go to state 90

    proc_variables  go to state 95
    proc_var_list   go to state 92


State 59

   20 proc_decl: PROCEDURE proc_name SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 93
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 96


State 60

   29 statement_list: statement_list . SEMICOLON statement
   57 block_statement: SBEGIN statement_list . SEND

    SEND       shift, and go to state 97
    SEMICOLON  shift, and go to state 98


State 61

   30 statement_list: statement .

    $default  reduce using rule 30 (statement_list)


State 62

   51 for_initial: FOR IDENT . ASSIGN expression

    ASSIGN  shift, and go to state 99


State 63

   69 expression: PLUS . term

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    term             go to state 100
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 64

   70 expression: MINUS . term

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    term             go to state 101
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 65

   79 factor: LPAREN . expression RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 102
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 66

   78 factor: NUMBER .

    $default  reduce using rule 78 (factor)


State 67

   56 proc_call_name: IDENT .
   82 var_or_function: IDENT .
   83 var_array: IDENT . LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 103

    LPAREN    reduce using rule 56 (proc_call_name)
    $default  reduce using rule 82 (var_or_function)


State 68

   80 factor: proc_call_name . add_stack_func LPAREN arg_list RPAREN

    $default  reduce using rule 81 (add_stack_func)

    add_stack_func  go to state 104


State 69

   43 if_statement: IF condition . THEN statement set_address_if else_statement set_address_else

    THEN  shift, and go to state 105


State 70

   62 condition: expression . EQ expression
   63          | expression . NEQ expression
   64          | expression . LT expression
   65          | expression . LE expression
   66          | expression . GT expression
   67          | expression . GE expression
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    EQ     shift, and go to state 108
    NEQ    shift, and go to state 109
    LE     shift, and go to state 110
    LT     shift, and go to state 111
    GE     shift, and go to state 112
    GT     shift, and go to state 113


State 71

   68 expression: term .
   74 term: term . MULT factor
   75     | term . DIV factor

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115

    $default  reduce using rule 68 (expression)


State 72

   73 term: factor .

    $default  reduce using rule 73 (term)


State 73

   76 factor: var_or_function .

    $default  reduce using rule 76 (factor)


State 74

   77 factor: var_array .

    $default  reduce using rule 77 (factor)


State 75

   58 read_statement: READ LPAREN . IDENT RPAREN
   59               | READ LPAREN . IDENT LBRACKET expression RBRACKET RPAREN

    IDENT  shift, and go to state 116


State 76

   48 while_statement: WHILE set_while_loop . condition DO statement

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    condition        go to state 117
    expression       go to state 70
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 77

   60 write_statement: WRITE LPAREN . expression RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 118
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 78

   42 array_assign: IDENT LBRACKET . expression RBRACKET

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 119
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 79

   40 assignment_statement: IDENT ASSIGN . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 120
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 80

    2 outblock: var_decl_part subprog_decl_part statement subprog_decl_part .

    $default  reduce using rule 2 (outblock)


State 81

   41 assignment_statement: array_assign ASSIGN . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 121
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 82

   52 for_loop: TO . expression DO

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 122
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 83

   50 for_statement: for_initial for_loop . statement

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 123
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 84

   53 proc_call_statement: proc_call_name add_stack_proc . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 124


State 85

   10 subprog_decl_list: subprog_decl_list SEMICOLON subprog_decl .

    $default  reduce using rule 10 (subprog_decl_list)


State 86

   17 forwarding_decl: forwarding FUNCTION proc_name .
   18                | forwarding FUNCTION proc_name . LPAREN proc_variables RPAREN

    LPAREN  shift, and go to state 125

    $default  reduce using rule 17 (forwarding_decl)


State 87

   15 forwarding_decl: forwarding PROCEDURE proc_name .
   16                | forwarding PROCEDURE proc_name . LPAREN proc_variables RPAREN

    LPAREN  shift, and go to state 126

    $default  reduce using rule 15 (forwarding_decl)


State 88

   88 id_list: IDENT LBRACKET NUMBER INTERVAL . NUMBER RBRACKET

    NUMBER  shift, and go to state 127


State 89

   89 id_list: id_list COMMA IDENT LBRACKET . NUMBER INTERVAL NUMBER RBRACKET

    NUMBER  shift, and go to state 128


State 90

   25 proc_var_list: IDENT .

    $default  reduce using rule 25 (proc_var_list)


State 91

   23 function_decl: FUNCTION proc_name LPAREN proc_variables . RPAREN SEMICOLON inblock

    RPAREN  shift, and go to state 129


State 92

   24 proc_variables: proc_var_list .
   26 proc_var_list: proc_var_list . COMMA IDENT

    COMMA  shift, and go to state 130

    $default  reduce using rule 24 (proc_variables)


State 93

   28 inblock: var_decl_part . statement

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 131
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 94

   22 function_decl: FUNCTION proc_name SEMICOLON inblock .

    $default  reduce using rule 22 (function_decl)


State 95

   21 proc_decl: PROCEDURE proc_name LPAREN proc_variables . RPAREN SEMICOLON inblock

    RPAREN  shift, and go to state 132


State 96

   20 proc_decl: PROCEDURE proc_name SEMICOLON inblock .

    $default  reduce using rule 20 (proc_decl)


State 97

   57 block_statement: SBEGIN statement_list SEND .

    $default  reduce using rule 57 (block_statement)


State 98

   29 statement_list: statement_list SEMICOLON . statement

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 133
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 99

   51 for_initial: FOR IDENT ASSIGN . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 134
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 100

   69 expression: PLUS term .
   74 term: term . MULT factor
   75     | term . DIV factor

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115

    $default  reduce using rule 69 (expression)


State 101

   70 expression: MINUS term .
   74 term: term . MULT factor
   75     | term . DIV factor

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115

    $default  reduce using rule 70 (expression)


State 102

   71 expression: expression . PLUS term
   72           | expression . MINUS term
   79 factor: LPAREN expression . RPAREN

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    RPAREN  shift, and go to state 135


State 103

   83 var_array: IDENT LBRACKET . expression RBRACKET

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 136
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 104

   80 factor: proc_call_name add_stack_func . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 137


State 105

   43 if_statement: IF condition THEN . statement set_address_if else_statement set_address_else

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 138
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 106

   71 expression: expression PLUS . term

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    term             go to state 139
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 107

   72 expression: expression MINUS . term

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    term             go to state 140
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 108

   62 condition: expression EQ . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 141
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 109

   63 condition: expression NEQ . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 142
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 110

   65 condition: expression LE . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 143
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 111

   64 condition: expression LT . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 144
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 112

   67 condition: expression GE . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 145
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 113

   66 condition: expression GT . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 146
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 114

   74 term: term MULT . factor

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    factor           go to state 147
    var_or_function  go to state 73
    var_array        go to state 74


State 115

   75 term: term DIV . factor

    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    factor           go to state 148
    var_or_function  go to state 73
    var_array        go to state 74


State 116

   58 read_statement: READ LPAREN IDENT . RPAREN
   59               | READ LPAREN IDENT . LBRACKET expression RBRACKET RPAREN

    RPAREN    shift, and go to state 149
    LBRACKET  shift, and go to state 150


State 117

   48 while_statement: WHILE set_while_loop condition . DO statement

    DO  shift, and go to state 151


State 118

   60 write_statement: WRITE LPAREN expression . RPAREN
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    RPAREN  shift, and go to state 152


State 119

   42 array_assign: IDENT LBRACKET expression . RBRACKET
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS      shift, and go to state 106
    MINUS     shift, and go to state 107
    RBRACKET  shift, and go to state 153


State 120

   40 assignment_statement: IDENT ASSIGN expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 40 (assignment_statement)


State 121

   41 assignment_statement: array_assign ASSIGN expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 41 (assignment_statement)


State 122

   52 for_loop: TO expression . DO
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    DO     shift, and go to state 154
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107


State 123

   50 for_statement: for_initial for_loop statement .

    $default  reduce using rule 50 (for_statement)


State 124

   53 proc_call_statement: proc_call_name add_stack_proc LPAREN . arg_list RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 155
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74
    arg_list         go to state 156


State 125

   18 forwarding_decl: forwarding FUNCTION proc_name LPAREN . proc_variables RPAREN

    IDENT  shift, and go to state 90

    proc_variables  go to state 157
    proc_var_list   go to state 92


State 126

   16 forwarding_decl: forwarding PROCEDURE proc_name LPAREN . proc_variables RPAREN

    IDENT  shift, and go to state 90

    proc_variables  go to state 158
    proc_var_list   go to state 92


State 127

   88 id_list: IDENT LBRACKET NUMBER INTERVAL NUMBER . RBRACKET

    RBRACKET  shift, and go to state 159


State 128

   89 id_list: id_list COMMA IDENT LBRACKET NUMBER . INTERVAL NUMBER RBRACKET

    INTERVAL  shift, and go to state 160


State 129

   23 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN . SEMICOLON inblock

    SEMICOLON  shift, and go to state 161


State 130

   26 proc_var_list: proc_var_list COMMA . IDENT

    IDENT  shift, and go to state 162


State 131

   28 inblock: var_decl_part statement .

    $default  reduce using rule 28 (inblock)


State 132

   21 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN . SEMICOLON inblock

    SEMICOLON  shift, and go to state 163


State 133

   29 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 29 (statement_list)


State 134

   51 for_initial: FOR IDENT ASSIGN expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 51 (for_initial)


State 135

   79 factor: LPAREN expression RPAREN .

    $default  reduce using rule 79 (factor)


State 136

   71 expression: expression . PLUS term
   72           | expression . MINUS term
   83 var_array: IDENT LBRACKET expression . RBRACKET

    PLUS      shift, and go to state 106
    MINUS     shift, and go to state 107
    RBRACKET  shift, and go to state 164


State 137

   80 factor: proc_call_name add_stack_func LPAREN . arg_list RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 155
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74
    arg_list         go to state 165


State 138

   43 if_statement: IF condition THEN statement . set_address_if else_statement set_address_else

    $default  reduce using rule 44 (set_address_if)

    set_address_if  go to state 166


State 139

   71 expression: expression PLUS term .
   74 term: term . MULT factor
   75     | term . DIV factor

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115

    $default  reduce using rule 71 (expression)


State 140

   72 expression: expression MINUS term .
   74 term: term . MULT factor
   75     | term . DIV factor

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115

    $default  reduce using rule 72 (expression)


State 141

   62 condition: expression EQ expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 62 (condition)


State 142

   63 condition: expression NEQ expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 63 (condition)


State 143

   65 condition: expression LE expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 65 (condition)


State 144

   64 condition: expression LT expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 64 (condition)


State 145

   67 condition: expression GE expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 67 (condition)


State 146

   66 condition: expression GT expression .
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 66 (condition)


State 147

   74 term: term MULT factor .

    $default  reduce using rule 74 (term)


State 148

   75 term: term DIV factor .

    $default  reduce using rule 75 (term)


State 149

   58 read_statement: READ LPAREN IDENT RPAREN .

    $default  reduce using rule 58 (read_statement)


State 150

   59 read_statement: READ LPAREN IDENT LBRACKET . expression RBRACKET RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 167
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 151

   48 while_statement: WHILE set_while_loop condition DO . statement

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 168
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 152

   60 write_statement: WRITE LPAREN expression RPAREN .

    $default  reduce using rule 60 (write_statement)


State 153

   42 array_assign: IDENT LBRACKET expression RBRACKET .

    $default  reduce using rule 42 (array_assign)


State 154

   52 for_loop: TO expression DO .

    $default  reduce using rule 52 (for_loop)


State 155

   71 expression: expression . PLUS term
   72           | expression . MINUS term
   84 arg_list: expression .

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 84 (arg_list)


State 156

   53 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list . RPAREN
   85 arg_list: arg_list . COMMA expression

    RPAREN  shift, and go to state 169
    COMMA   shift, and go to state 170


State 157

   18 forwarding_decl: forwarding FUNCTION proc_name LPAREN proc_variables . RPAREN

    RPAREN  shift, and go to state 171


State 158

   16 forwarding_decl: forwarding PROCEDURE proc_name LPAREN proc_variables . RPAREN

    RPAREN  shift, and go to state 172


State 159

   88 id_list: IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET .

    $default  reduce using rule 88 (id_list)


State 160

   89 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL . NUMBER RBRACKET

    NUMBER  shift, and go to state 173


State 161

   23 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 93
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 174


State 162

   26 proc_var_list: proc_var_list COMMA IDENT .

    $default  reduce using rule 26 (proc_var_list)


State 163

   21 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON . inblock

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (var_decl_part)

    var_decl_part  go to state 93
    var_decl_list  go to state 9
    var_decl       go to state 10
    inblock        go to state 175


State 164

   83 var_array: IDENT LBRACKET expression RBRACKET .

    $default  reduce using rule 83 (var_array)


State 165

   80 factor: proc_call_name add_stack_func LPAREN arg_list . RPAREN
   85 arg_list: arg_list . COMMA expression

    RPAREN  shift, and go to state 176
    COMMA   shift, and go to state 170


State 166

   43 if_statement: IF condition THEN statement set_address_if . else_statement set_address_else

    ELSE  shift, and go to state 177

    ELSE      [reduce using rule 46 (else_statement)]
    $default  reduce using rule 46 (else_statement)

    else_statement  go to state 178


State 167

   59 read_statement: READ LPAREN IDENT LBRACKET expression . RBRACKET RPAREN
   71 expression: expression . PLUS term
   72           | expression . MINUS term

    PLUS      shift, and go to state 106
    MINUS     shift, and go to state 107
    RBRACKET  shift, and go to state 179


State 168

   48 while_statement: WHILE set_while_loop condition DO statement .

    $default  reduce using rule 48 (while_statement)


State 169

   53 proc_call_statement: proc_call_name add_stack_proc LPAREN arg_list RPAREN .

    $default  reduce using rule 53 (proc_call_statement)


State 170

   85 arg_list: arg_list COMMA . expression

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    LPAREN  shift, and go to state 65
    NUMBER  shift, and go to state 66
    IDENT   shift, and go to state 67

    proc_call_name   go to state 68
    expression       go to state 180
    term             go to state 71
    factor           go to state 72
    var_or_function  go to state 73
    var_array        go to state 74


State 171

   18 forwarding_decl: forwarding FUNCTION proc_name LPAREN proc_variables RPAREN .

    $default  reduce using rule 18 (forwarding_decl)


State 172

   16 forwarding_decl: forwarding PROCEDURE proc_name LPAREN proc_variables RPAREN .

    $default  reduce using rule 16 (forwarding_decl)


State 173

   89 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER . RBRACKET

    RBRACKET  shift, and go to state 181


State 174

   23 function_decl: FUNCTION proc_name LPAREN proc_variables RPAREN SEMICOLON inblock .

    $default  reduce using rule 23 (function_decl)


State 175

   21 proc_decl: PROCEDURE proc_name LPAREN proc_variables RPAREN SEMICOLON inblock .

    $default  reduce using rule 21 (proc_decl)


State 176

   80 factor: proc_call_name add_stack_func LPAREN arg_list RPAREN .

    $default  reduce using rule 80 (factor)


State 177

   45 else_statement: ELSE . statement

    SBEGIN  shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    READ    shift, and go to state 33
    WHILE   shift, and go to state 34
    WRITE   shift, and go to state 35
    IDENT   shift, and go to state 36

    $default  reduce using rule 61 (null_statement)

    statement             go to state 182
    assignment_statement  go to state 38
    array_assign          go to state 39
    if_statement          go to state 40
    while_statement       go to state 41
    for_statement         go to state 42
    for_initial           go to state 43
    proc_call_statement   go to state 44
    proc_call_name        go to state 45
    block_statement       go to state 46
    read_statement        go to state 47
    write_statement       go to state 48
    null_statement        go to state 49


State 178

   43 if_statement: IF condition THEN statement set_address_if else_statement . set_address_else

    $default  reduce using rule 47 (set_address_else)

    set_address_else  go to state 183


State 179

   59 read_statement: READ LPAREN IDENT LBRACKET expression RBRACKET . RPAREN

    RPAREN  shift, and go to state 184


State 180

   71 expression: expression . PLUS term
   72           | expression . MINUS term
   85 arg_list: arg_list COMMA expression .

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107

    $default  reduce using rule 85 (arg_list)


State 181

   89 id_list: id_list COMMA IDENT LBRACKET NUMBER INTERVAL NUMBER RBRACKET .

    $default  reduce using rule 89 (id_list)


State 182

   45 else_statement: ELSE statement .

    $default  reduce using rule 45 (else_statement)


State 183

   43 if_statement: IF condition THEN statement set_address_if else_statement set_address_else .

    $default  reduce using rule 43 (if_statement)


State 184

   59 read_statement: READ LPAREN IDENT LBRACKET expression RBRACKET RPAREN .

    $default  reduce using rule 59 (read_statement)
